{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The Cerberus is an users' data keeper. The Cerberus encrypts data and pushes it into [ipfs](https://ipfs.io)",
    "title": "Cerberus",
    "version": "1.0.0"
  },
  "basePath": "/v1",
  "paths": {
    "/pdv-exists": {
      "post": {
        "tags": [
          "Cerberus"
        ],
        "summary": "Checks if pdv exists in storage.",
        "operationId": "DoesPDVExist",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "result of check",
            "schema": {
              "$ref": "#/definitions/doesPDVExistResponse"
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "signature wasn't verified",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/receive-pdv": {
      "post": {
        "tags": [
          "Cerberus"
        ],
        "summary": "Gets and decrypts pdv from storage.",
        "operationId": "ReceivePDV",
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/receivePDVRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "pdv from storage",
            "schema": {
              "$ref": "#/definitions/receivePDVResponse"
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "signature wasn't verified",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "access to file is denied",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/send-pdv": {
      "post": {
        "tags": [
          "Cerberus"
        ],
        "summary": "Encrypts and puts PDV data into storage.",
        "operationId": "SendPDV",
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sendPDVRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "pdv was put into storage",
            "schema": {
              "$ref": "#/definitions/sendPDVResponse"
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "signature wasn't verified",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "doesPDVExistResponse": {
      "type": "object",
      "properties": {
        "exists": {
          "description": "Flag which means file exists or not",
          "type": "boolean",
          "x-go-name": "Exists"
        }
      },
      "x-go-package": "github.com/Decentr-net/cerberus/internal/server"
    },
    "error": {
      "type": "object",
      "properties": {
        "error": {
          "description": "error message",
          "type": "string",
          "x-go-name": "Error"
        }
      },
      "x-go-package": "github.com/Decentr-net/cerberus/internal/server"
    },
    "receivePDVRequest": {
      "type": "object",
      "properties": {
        "address": {
          "description": "Requested file's address(hash in ipfs)",
          "type": "string",
          "x-go-name": "Address"
        },
        "signature": {
          "$ref": "#/definitions/signature"
        }
      },
      "x-go-package": "github.com/Decentr-net/cerberus/internal/server"
    },
    "receivePDVResponse": {
      "type": "object",
      "properties": {
        "data": {
          "description": "Requested file's data encrypted with base64",
          "type": "string",
          "x-go-name": "Data"
        }
      },
      "x-go-package": "github.com/Decentr-net/cerberus/internal/server"
    },
    "sendPDVRequest": {
      "type": "object",
      "properties": {
        "data": {
          "description": "Data which encrypted with base64",
          "type": "string",
          "x-go-name": "Data"
        },
        "signature": {
          "$ref": "#/definitions/signature"
        }
      },
      "x-go-package": "github.com/Decentr-net/cerberus/internal/server"
    },
    "sendPDVResponse": {
      "type": "object",
      "properties": {
        "address": {
          "description": "Put file address(hash in ipfs)",
          "type": "string",
          "x-go-name": "Address"
        }
      },
      "x-go-package": "github.com/Decentr-net/cerberus/internal/server"
    },
    "signature": {
      "type": "object",
      "properties": {
        "public_key": {
          "description": "User's public key in hex.",
          "type": "string",
          "x-go-name": "PublicKey"
        },
        "signature": {
          "description": "Request's digest signature in hex. Digest is sha256 hash of whole request data (except signature object).\nYou must hash data in order according to request attributes order.",
          "type": "string",
          "x-go-name": "Signature"
        }
      },
      "x-go-package": "github.com/Decentr-net/cerberus/internal/server"
    }
  }
}